//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAPI.JobService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskType", Namespace="http://schemas.datacontract.org/2004/07/WindowsService.Services")]
    public enum TaskType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Validate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transform = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolType", Namespace="http://schemas.datacontract.org/2004/07/WindowsService.Services")]
    public enum ToolType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAS = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobService.IJobService")]
    public interface IJobService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/StartJob", ReplyAction="http://tempuri.org/IJobService/StartJobResponse")]
        void StartJob(string workDir, WebAPI.JobService.TaskType taskType, WebAPI.JobService.ToolType toolType, System.Collections.Generic.Dictionary<string, string> parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobService/StartJob", ReplyAction="http://tempuri.org/IJobService/StartJobResponse")]
        System.Threading.Tasks.Task StartJobAsync(string workDir, WebAPI.JobService.TaskType taskType, WebAPI.JobService.ToolType toolType, System.Collections.Generic.Dictionary<string, string> parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobServiceChannel : WebAPI.JobService.IJobService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobServiceClient : System.ServiceModel.ClientBase<WebAPI.JobService.IJobService>, WebAPI.JobService.IJobService {
        
        public JobServiceClient() {
        }
        
        public JobServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartJob(string workDir, WebAPI.JobService.TaskType taskType, WebAPI.JobService.ToolType toolType, System.Collections.Generic.Dictionary<string, string> parameters) {
            base.Channel.StartJob(workDir, taskType, toolType, parameters);
        }
        
        public System.Threading.Tasks.Task StartJobAsync(string workDir, WebAPI.JobService.TaskType taskType, WebAPI.JobService.ToolType toolType, System.Collections.Generic.Dictionary<string, string> parameters) {
            return base.Channel.StartJobAsync(workDir, taskType, toolType, parameters);
        }
    }
}
